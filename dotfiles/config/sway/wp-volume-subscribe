#!/usr/bin/wpexec

local node_om = ObjectManager {
  Interest {
    type = "node",
    Constraint { "media.class", "=", "Audio/Sink", type = "pw-global" },
  },
}

local metadata_om = ObjectManager{
  Interest {
    type = "metadata",
    Constraint { "metadata.name", "=", "default" },
  },
}

local default_sink = nil
local sinks = {}

local update_prompt = function()
  if sinks[default_sink] == nil then return end
  for prop in sinks[default_sink]:iterate_params("Props") do
    local output = prop:parse().properties
    if output.channelVolumes ~= nil then
      print(Json.Object({
        volume = output.channelVolumes[1] ^ (1 / 3),
        mute = output.mute,
      }):get_data())
    end
  end
end

metadata_om:connect("object-added", function(_, metadata)
  default_sink = (metadata:find(0, "default.audio.sink") or ""):match('"name":"(.*)"')
  update_prompt()

  metadata:connect("changed", function(_, _, key, _, value)
    if key == "default.audio.sink" then
      default_sink = value:match('"name":"(.*)"')
      update_prompt()
    end
  end)
end)

node_om:connect("object-added", function(_, node)
  sinks[node.properties["node.name"]] = node
  if default_sink == node.properties["node.name"] then update_prompt() end

  node:connect("params-changed", function(_, params)
    if params == "Props" and default_sink == node.properties["node.name"] then
      update_prompt()
    end
  end)
end)

node_om:connect("object-removed", function(_, node)
  sinks[node.properties["node.name"]] = nil
end)

metadata_om:activate()
node_om:activate()
